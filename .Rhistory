# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::normDataWithin(df.means, idvar = "subject_nr", measurevar = "mean_acc")
df.norm %>% head
df.norm.means <- df.norm %>% group_by(stim_type) %>%
dplyr::summarise(mean = mean(mean_accNormed))
df.norm.means %>% head
# Based on https://www.r-bloggers.com/visualizing-small-scale-paired-data-combining-boxplots-stripcharts-and-confidence-intervals-in-r/
par(cex.main = 1.5, mar = c(5, 6, 4, 5) + 0.1, mgp = c(3.5, 1, 0), cex.lab = 1.5,
font.lab = 2, cex.axis = 1.3, bty = "n", las = 1)
stripchart(mean_acc ~ stim_type, data = df.norm,
vertical=TRUE,
pch=16,
method="jitter",
main = "Fig. 1", ylab = " ",
col = yarrr::transparent("black", trans.val = .7),
ylim = c(0,1)
)
# our custom grid
# 0.5 point
lines(c(0, 6.7), c(0.5,0.5) , lty = 2,lwd=2)
for (i in c(seq(0.1, 0.9,.2))){
lines(c(0,6.7), c(i,i), lwd=0.3, lty=2)
}
# Now we want to place the means
s = 1:4 # how many means we have to place
m = 0.25 # how long has the mean tick to be
s - m
segments(x = s-m,
x1 = s+m,
y = df.norm.means$mean ,
y1 = df.norm.means$mean, lwd = 4)
points(s , df.norm.means$mean, lwd = 13)
#?normDataWithin
?summarySEwithin
ci <- Rmisc::summarySEwithin(df.means, measurevar = "mean_acc",
withinvars = "stim_type", idvar = "subject_nr")
ci %>% head
for (i in 1:nrow(ci)){
ci.upper = ci[i,"mean_acc"] + ci[i,"ci"]
ci.lower = ci[i,"mean_acc"] - ci[i,"ci"]
rect(xleft = i - m,
ybottom = ci.lower,
xright = i + m,
ytop = ci.upper, lwd = 2, col = yarrr::transparent("black", trans.val = .9))
}
# Save it!
p1() <-function(){
# put here all the plto code
}
pdf("my_plot.pdf", width = 8, height =  4)
par(cex.main = 1.5, mar = c(5, 6, 4, 5) + 0.1, mgp = c(3.5, 1, 0), cex.lab = 1.5,
font.lab = 2, cex.axis = 1.3, bty = "n", las = 1)
stripchart(mean_acc ~ stim_type, data = df.norm,
vertical=TRUE,
pch=16,
method="jitter",
main = "Fig. 1", ylab = " ",
col = yarrr::transparent("black", trans.val = .7),
ylim = c(0,1)
)
# our custom grid
# 0.5 point
lines(c(0, 6.7), c(0.5,0.5) , lty = 2,lwd=2)
for (i in c(seq(0.1, 0.9,.2))){
lines(c(0,6.7), c(i,i), lwd=0.3, lty=2)
}
# Now we want to place the means
s = 1:4 # how many means we have to place
m = 0.25 # how long has the mean tick to be
segments(x = s-m,
x1 = s+m,
y = df.norm.means$mean ,
y1 = df.norm.means$mean, lwd = 4)
points(s , df.norm.means$mean, lwd = 13)
ci <- summarySEwithin(df.means, measurevar = "mean_acc", withinvars = "stim_type", idvar = "subject_nr")
for (i in 1:nrow(ci)){
ci.upper = ci[i,"mean_acc"] + ci[i,"ci"]
ci.lower = ci[i,"mean_acc"] - ci[i,"ci"]
rect(xleft = i - m,
ybottom = ci.lower,
xright = i + m,
ytop = ci.upper, lwd = 2, col = yarrr::transparent("black", trans.val = .9))
}
dev.off()
par(mfrow = c(2, 2))
for (element in unique(df$stim_type)){
color =  gray(0, .5)
color_secondary = gray(1, .8)
x_lim = c(min(df$rt) ,max(df$rt))
breaks = 30
hist(df$rt[df$stim_type == element], col = color,
main = " ", xlab = element , border = color , xlim = x_lim,
breaks = breaks)
hist(df[which(df$stim_type == element & df$correct == 0) ,"rt"], col = color_secondary,
main = " ", xlab = element , border = color , xlim = x_lim,
breaks = breaks, add = TRUE)
}
layout(mat = matrix(c(5, 5, 1, 2, 3, 4), byrow = TRUE,
nrow = 3,
ncol = 2),
heights = c(0.3, 1, 1),    # Heights of the two rows
widths = c(2, 2))     # Widths of the two columns
mat = matrix(c(5, 5, 1, 2, 3, 4), byrow = TRUE,
nrow = 3,
ncol = 2)
mat
layout.show(5)
par(mar = c(3,3,3,3))
for (element in unique(df$stim_type)){
color =  col = gray(0, .5)
color_secondary = gray(1, .8)
x_lim = c(min(df$rt) ,max(df$rt))
breaks = 30
hist(df$rt[df$stim_type == element], col = color,
main = " ", xlab = element , border = color , xlim = x_lim,
breaks = breaks)
hist(df[which(df$stim_type == element & df$correct == 0) ,"rt"], col = color_secondary,
main = " ", xlab = element , border = color , xlim = x_lim,
breaks = breaks, add = TRUE)
}
par(mar = c(0,0,0,0))
plot(x=0,y=1,type="n",ylim=c(-1,1), xlim=c(-1,1), axes = FALSE)
text(-.5,0,paste("Fig 1. Reaction times"), cex=2)
#### Script for CREATE A NICE PLOTS ####
# First we clean the enviroment and load some packages
rm(list=ls());gc()
if (!require('pacman')) install.packages('pacman'); library('pacman')
p_load(dplyr, yarrr, Rmisc, ggplot2)
load("./data/discr_df_clean.RData")
df %>% str
df %>% head
# Means for each participant
df.means <- df %>% group_by(subject_nr, stim_type) %>%
dplyr::summarise(., mean_acc = mean(correct))
df.means
# using pirate plot package
pirateplot(mean_acc ~ stim_type, df.means, inf.method = "ci",
point.o = 1, pal = "black",
bean.f.o = .1, inf.b.o = 1, inf.within = "subject_nr",
inf.f.o = 0.5, inf.disp = "bean",
main = "a type stimuli mean accuracy",
ylab = "Accuracy", xlab = "Stim type"
)
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::normDataWithin(df.means, idvar = "subject_nr", measurevar = "mean_acc")
df.norm %>% head
df.norm.means <- df.norm %>% group_by(stim_type) %>%
dplyr::summarise(mean = mean(mean_accNormed))
df.norm.means %>% head
#### Script for CREATE A NICE PLOTS ####
# First we clean the enviroment and load some packages
rm(list=ls());gc()
if (!require('pacman')) install.packages('pacman'); library('pacman')
p_load(dplyr, yarrr, Rmisc, ggplot2)
load("./data/discr_df_clean.RData")
df %>% str
df %>% head
# Means for each participant
df.means <- df %>% group_by(subject_nr, stim_type) %>%
dplyr::summarise(., mean_acc = mean(correct))
df.means
# using pirate plot package
pirateplot(mean_acc ~ stim_type, df.means, inf.method = "ci",
point.o = 1, pal = "black",
bean.f.o = .1, inf.b.o = 1, inf.within = "subject_nr",
inf.f.o = 0.5, inf.disp = "bean",
main = "a type stimuli mean accuracy",
ylab = "Accuracy", xlab = "Stim type"
)
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::normDataWithin(df.means, idvar = "subject_nr", measurevar = "mean_acc")
df.norm %>% head
df.norm.means <- df.norm %>% group_by(stim_type) %>%
dplyr::summarise(mean = mean(mean_accNormed))
df.norm.means %>% head
theme_set(theme_bw())
my_theme <- theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x= element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
strip.text.x = element_text(size=14), strip.text.y = element_text(size=16),
strip.background = element_rect(colour="black"),
axis.text.x = element_text(color="black", size=14),
axis.text.y = element_text(color="black", size=14),
axis.title.x = element_text(face="bold", size=18),
axis.title.y = element_text(face="bold",size=18),
axis.ticks = element_blank(),
legend.title = element_text(size=14), legend.text = element_text(size = 14),
plot.title = element_text(vjust = 1.3, face="bold", size=20),
plot.margin = unit(c(.5, .5, .5, .5), "cm")
)
df.norm.means %>% head
df %>% head
# Means for each participant
df.means <- df %>% group_by(subject_nr, stim_type) %>%
dplyr::summarise(., mean_acc = mean(correct))
df.means
df.norm %>% head
#### Script for CREATE A NICE PLOTS ####
# ! THIS PLOT IS DEPRECATED.
# ! SOON I WILL UPLOAD A SIMPLE EASY GGPLOT ONE : )
# First we clean the enviroment and load some packages
rm(list=ls());gc()
if (!require('pacman')) install.packages('pacman'); library('pacman')
p_load(dplyr, yarrr, Rmisc)
load("./data/discr_df_clean.RData")
df %>% str
df %>% head
# Means for each participant
df.means <- df %>% group_by(subject_nr, stim_type) %>%
dplyr::summarise(., mean_acc = mean(correct))
df.means
# Means for each participant
df.means <- df %>% group_by(subject_nr, stim_type) %>%
dplyr::summarise(., mean_acc = mean(correct))
df.means
# using pirate plot package
pirateplot(mean_acc ~ stim_type, df.means, inf.method = "ci",
point.o = 1, pal = "black",
bean.f.o = .1, inf.b.o = 1, inf.within = "subject_nr",
inf.f.o = 0.5, inf.disp = "bean",
main = "a type stimuli mean accuracy",
ylab = "Accuracy", xlab = "Stim type"
)
#### Script for CREATE A NICE PLOTS ####
# First we clean the enviroment and load some packages
rm(list=ls());gc()
if (!require('pacman')) install.packages('pacman'); library('pacman')
p_load(dplyr, yarrr, Rmisc, ggplot2)
load("./data/discr_df_clean.RData")
df %>% str
df %>% head
# Means for each participant
df.means <- df %>% group_by(subject_nr, stim_type) %>%
dplyr::summarise(., mean_acc = mean(correct))
df.means
# using pirate plot package
pirateplot(mean_acc ~ stim_type, df.means, inf.method = "ci",
point.o = 1, pal = "black",
bean.f.o = .1, inf.b.o = 1, inf.within = "subject_nr",
inf.f.o = 0.5, inf.disp = "bean",
main = "a type stimuli mean accuracy",
ylab = "Accuracy", xlab = "Stim type"
)
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::normDataWithin(df.means, idvar = "subject_nr", measurevar = "mean_acc")
# using pirate plot package
pirateplot(mean_acc ~ stim_type, df.means, inf.method = "ci",
main = "a type stimuli mean accuracy",
ylab = "Accuracy", xlab = "Stim type"
)
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::normDataWithin(df.means, idvar = "subject_nr", measurevar = "mean_acc")
df.norm %>% head
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::SummarySEWithin(df.means, idvar = "subject_nr", measurevar = "mean_acc")
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::summarySEWithin(df.means, idvar = "subject_nr", measurevar = "mean_acc")
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::summarySEwithin(df.means, idvar = "subject_nr", measurevar = "mean_acc")
df.means
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.norm <- Rmisc::summarySEwithin(df.means, idvar = "subject_nr",
measurevar = "mean_acc", withinvars = "stim_type")
df.norm %>% head
# We want to graph the difference between tasks.
# We have a within measures design, so we remove the between participant variation
# with the  Morey method trough the Rmisc package
# check http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
df.summary <- Rmisc::summarySEwithin(df.means, idvar = "subject_nr",
measurevar = "mean_acc", withinvars = "stim_type")
df.summary %>% head
theme_set(theme_bw())
my_theme <- theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x= element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
strip.text.x = element_text(size=14), strip.text.y = element_text(size=16),
strip.background = element_rect(colour="black"),
axis.text.x = element_text(color="black", size=14),
axis.text.y = element_text(color="black", size=14),
axis.title.x = element_text(face="bold", size=18),
axis.title.y = element_text(face="bold",size=18),
axis.ticks = element_blank(),
legend.title = element_text(size=14), legend.text = element_text(size = 14),
plot.title = element_text(vjust = 1.3, face="bold", size=20),
plot.margin = unit(c(.5, .5, .5, .5), "cm")
)
df.means %>% head
p = ggplot(df.means, aes(x=stim_type, y = mean_acc)) +
geom_jitter(aes(col=stim_type), width = 0.2, alpha = 0.5) +
geom_crossbar(data = df.summary, aes(x=stim_type, ymin = mean_acc-ci,
ymax=mean_acc+ci, fill = stim_type, alpha = 0.4 )) +
xlab(" ") + ylab("Response time") +
my_theme + theme(legend.position="none")
p
p = ggplot(df.means, aes(x=stim_type, y = mean_acc)) +
geom_jitter(aes(col=stim_type), width = 0.2, alpha = 0.5) +
geom_crossbar(data = df.summary, aes(x=stim_type, ymin = mean_acc-ci,
ymax=mean_acc+ci, fill = stim_type, alpha = 0.4 )) +
xlab(" ") + ylab("Accuracy") +
ggtitle("Mean accuracy by type") +
my_theme + theme(legend.position="none")
p
p.1 = ggplot(df.means, aes(x=stim_type, y = mean_acc)) +
geom_jitter(aes(col=stim_type), width = 0.2, alpha = 0.5) +
geom_crossbar(data = df.summary, aes(x=stim_type, ymin = mean_acc-ci,
ymax=mean_acc+ci, fill = stim_type, alpha = 0.4 )) +
xlab(" ") + ylab("Accuracy") +
ggtitle("Mean accuracy by type") +
my_theme + theme(legend.position="none")
p.1
df %>% head
# Means for each participant
df.means.rt <- df %>% group_by(subject_nr, stim_type) %>%
dplyr::summarise(., mean_acc = mean(rt))
df.means.rt
# Means for each participant
df.means.rt <- df %>% group_by(subject_nr, stim_type) %>%
dplyr::summarise(., mean_rt = mean(rt), median_rt = median(rt))
df.means.rt
# Means for each participant
df.means.rt <- df %>% group_by(subject_nr, stim_type, correct) %>%
dplyr::summarise(., mean_rt = mean(rt), median_rt = median(rt))
df.means.rt
p2 = ggplot(df.means.rt, aes(x=mean_rt)) +
geom_hist()
p2 = ggplot(df.means.rt, aes(x=mean_rt)) +
geom_histogram()
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = correct)) +
geom_histogram()
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, col = correct)) +
geom_histogram()
p2
df.means.rt
p2 = ggplot(df.means.rt, aes(x=mean_rt, col = factor(correct) )) +
geom_histogram()
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram()
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram() + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(stat_bin=10) + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(bins=10) + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(bins=20) + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(bins=20. alpha=0.5) + facet_wrap(~stim_type)
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(bins=20, alpha=0.5) + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(binwidth = 10, alpha=0.5) + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(binwidth = 40, alpha=0.5) + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(binwidth = 40, alpha=0.5, position="identity") + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(binwidth = 50, alpha=0.5, position="identity") + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(bins = 50, alpha=0.5, position="identity") + facet_wrap(~stim_type)
p2
p2 = ggplot(df.means.rt, aes(x=mean_rt, fill = factor(correct) )) +
geom_histogram(bins = 10, alpha=0.5, position="identity") + facet_wrap(~stim_type)
p2
p3 = ggplot(df.means.rt, aes(x=median_rt, fill = factor(correct) )) +
geom_histogram(bins = 10, alpha=0.5, position="identity") + facet_wrap(~stim_type)
p3
tab = summarySEwithin(data = df, measurevar = "RT",
withinvars = c("stim_type", "subject_nr"))
tab = summarySEwithin(data = df, measurevar = "rt",
withinvars = c("stim_type", "subject_nr"))
tab
tab = summarySEwithin(data = df, measurevar = "rt",
withinvars = c("stim_type", "subject_nr"))
# Get the mean of each participant in both types.
# this is just for ordering the data
tab = tab %>% group_by(subject_nr) %>%
summarise(mean_rt = mean(rt)) %>%
left_join(tab, . )
tab = summarySEwithin(data = df, measurevar = "rt",
withinvars = c( "subject_nr", "stim_type"))
# Get the mean of each participant in both types.
# this is just for ordering the data
tab = tab %>% group_by(subject_nr) %>%
summarise(mean_rt = mean(rt)) %>%
left_join(tab, . )
tab
tab %>% group_by(subject_nr) %>%
summarise(mean_rt = mean(rt))
# Get the mean of each participant in both types.
# this is just for ordering the data
tab =
tab %>% group_by(subject_nr) %>%
summarise(mean_rt = mean(rt)) %>%
left_join(tab, . )
# Get the mean of each participant in both types.
# this is just for ordering the data
tab =
tab %>% group_by(subject_nr) %>%
summarise(mean_rt = mean(rt))
tab
tab = summarySEwithin(data = df, measurevar = "rt",
withinvars = c( "subject_nr", "stim_type"))
# Get the mean of each participant in both types.
# this is just for ordering the data
tab =
tab %>% group_by(subject_nr) %>%
summarise(mean_rt = mean(rt)) %>%
left_join(tab, . )
# Get the mean of each participant in both types.
# this is just for ordering the data
tab =
tab %>% group_by(subject_nr) %>%
summarise(mean_rt = mean(rt))
tab
tab = summarySEwithin(data = df, measurevar = "rt",
withinvars = c( "subject_nr", "stim_type"))
tab %>% head
tab %>% group_by(subject_nr) %>%
summarise(mean_rt = mean(rt))
tab %>% dplyr::group_by(subject_nr) %>%
dplyr::summarise(mean_rt = mean(rt))
tab = summarySEwithin(data = df, measurevar = "rt",
withinvars = c( "subject_nr", "stim_type"))
tab %>% head
# Get the mean of each participant in both types.
# this is just for ordering the data
tab =  tab %>% dplyr::group_by(subject_nr) %>%
dplyr::summarise(mean_rt = mean(rt)) %>%
left_join(tab, . )
# Ordering by mean RT
tab = arrange(tab, desc(mean_rt), subject_nr)
ggplot(tab, aes(x = reorder(part, -mean_rt), y = RT, group = type, col = type)) +
geom_point(position=pd) +
coord_flip() + facet_wrap(~cond) +
ylab("RT") + xlab("Participant") + ggtitle("Reaction times") +
geom_linerange(aes(ymin= RT-se, ymax= RT+se), size = 1, position = pd) +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = c(.9,.8))
pd <- position_dodge(0.4)
ggplot(tab, aes(x = reorder(part, -mean_rt), y = RT, group = type, col = type)) +
geom_point(position=pd) +
coord_flip() + facet_wrap(~cond) +
ylab("RT") + xlab("Participant") + ggtitle("Reaction times") +
geom_linerange(aes(ymin= RT-se, ymax= RT+se), size = 1, position = pd) +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = c(.9,.8))
ggplot(tab, aes(x = reorder(subject_nr, -mean_rt), y = rt, group = type, col = stim_type)) +
geom_point(position=pd) +
coord_flip() +
ylab("RT") + xlab("Participant") + ggtitle("Reaction times") +
geom_linerange(aes(ymin= rt-se, ymax= rt+se), size = 1, position = pd) +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = c(.9,.8))
ggplot(tab, aes(x = reorder(subject_nr, -mean_rt), y = rt, group = stim_type, col = stim_type)) +
geom_point(position=pd) +
coord_flip() +
ylab("RT") + xlab("Participant") + ggtitle("Reaction times") +
geom_linerange(aes(ymin= rt-se, ymax= rt+se), size = 1, position = pd) +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = c(.9,.8))
pd <- position_dodge(0.8)
ggplot(tab, aes(x = reorder(subject_nr, -mean_rt), y = rt, group = stim_type, col = stim_type)) +
geom_point(position=pd) +
coord_flip() +
ylab("RT") + xlab("Participant") + ggtitle("Reaction times") +
geom_linerange(aes(ymin= rt-se, ymax= rt+se), size = 1, position = pd) +
my_theme +
theme(axis.text.y = element_blank(),
legend.position = c(.9,.8))
